#!/bin/sh

die() {
	echo $@ >&2
	logger -i -t pipeman "error: $@"
	exit 1
}

while test -n "$1" ; do
    case $1 in
        -k|--kill)
        KILL=y
        ;;
        *)
        SDIR=$1
        test -d "$SDIR" || die "'$SDIR' is not a dir"
        ;;
    esac
    shift
done

FNAME=pipelets.update
test -n "$FNAME" || die "FNAME should be non-empty"

# Will generate function call for every input line
awesomize() {
	local sname=`basename "$1"`
	echo "Will use '$sname' as callback key for $1" >&2
	while read l ; do
		echo "$FNAME ( \"$sname\" , \"$l\" )" | awesome-client
	done
}

cleanup() {
	for pidfile in `ls -1 $HOME/.pipeman:$DISPLAY.*.ppid` ; do 
		pkill -P `cat $pidfile` 2>/dev/null
        rm $pidfile
	done
}

check_pid() {
	local pidfile="$HOME/.pipeman:$DISPLAY.pid"
	test -f "$pidfile" && kill `cat $pidfile`
	echo $$ > "$pidfile"
}

check_prog() {
	which "$1" >/dev/null 2>&1 || die "Please install $1"
}

check_prog pkill
check_prog awesome-client

cleanup
test "$KILL" = "y" && { exit 0; }

trap cleanup "EXIT"
for s in `find "$SDIR" -type f -and -executable` ; do
	echo "Starting $s"
	{ $s | awesomize "$s" ; } &
    pid=$!
    echo $pid > $HOME/.pipeman:$DISPLAY.`basename $s`.ppid
    pids="$pids $pid"
done

test -z "$pids" && die "Nothing to wait for"
wait $pids

